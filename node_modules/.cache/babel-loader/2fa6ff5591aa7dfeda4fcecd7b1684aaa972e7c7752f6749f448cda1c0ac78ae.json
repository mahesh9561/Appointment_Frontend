{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahes\\\\OneDrive\\\\Desktop\\\\Mahesh Pathak\\\\Practice-Folder\\\\Acc\\\\acc\\\\src\\\\componets\\\\Auth\\\\PrivateRouter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/appointment/dashboard', {\n          withCredentials: true\n        });\n        console.log(response.data);\n        setIsAuthenticated(true);\n      } catch (error) {\n        setIsAuthenticated(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this); // Spinner or loading indicator can be added here\n  }\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 30\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 43\n  }, this);\n};\n_s(PrivateRoute, \"ZTMIcZ3KFUL4S6fmpEYhW5p5Z1I=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","Outlet","axios","jsxDEV","_jsxDEV","PrivateRoute","_s","isAuthenticated","setIsAuthenticated","checkAuth","response","get","withCredentials","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/mahes/OneDrive/Desktop/Mahesh Pathak/Practice-Folder/Acc/acc/src/componets/Auth/PrivateRouter.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst PrivateRoute = () => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const checkAuth = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8000/api/appointment/dashboard', { withCredentials: true });\r\n                console.log(response.data);\r\n                setIsAuthenticated(true);\r\n            } catch (error) {\r\n                setIsAuthenticated(false);\r\n            }\r\n        };\r\n        checkAuth();\r\n    }, []);\r\n\r\n    if (isAuthenticated === null) {\r\n        return <div>Loading...</div>; // Spinner or loading indicator can be added here\r\n    }\r\n\r\n    return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" replace />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,iDAAiD,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;QAC9GC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;QAC1BP,kBAAkB,CAAC,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACZR,kBAAkB,CAAC,KAAK,CAAC;MAC7B;IACJ,CAAC;IACDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,eAAe,KAAK,IAAI,EAAE;IAC1B,oBAAOH,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,OAAOd,eAAe,gBAAGH,OAAA,CAACH,MAAM;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGjB,OAAA,CAACJ,QAAQ;IAACsB,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC1E,CAAC;AAACf,EAAA,CArBID,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}