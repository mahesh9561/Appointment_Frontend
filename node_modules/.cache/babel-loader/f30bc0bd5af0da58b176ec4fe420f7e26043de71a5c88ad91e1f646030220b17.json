{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahes\\\\OneDrive\\\\Desktop\\\\Mahesh Pathak\\\\Practice-Folder\\\\Acc\\\\acc\\\\src\\\\componets\\\\Appointment\\\\Appointment.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport Sessions from './Sessions';\nimport Slider from '../Slider';\nimport axios from 'axios';\nimport { AppointmentContext } from './Context/AppointmentContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Appointment() {\n  _s();\n  const [isSliderOpen, setIsSliderOpen] = useState(false);\n\n  // Consume state values from context\n  const {\n    name,\n    setName,\n    selectedSessionName,\n    setSelectedSessionName,\n    last_session,\n    setLast_session\n  } = useContext(AppointmentContext);\n\n  // Fetch session data on component mount\n  useEffect(() => {\n    const fetchSessions = async () => {\n      const response = await axios.get('http://localhost:8000/api/appointment/getClassSessions', {\n        withCredentials: true\n      });\n      setName(response.data);\n    };\n    fetchSessions();\n  }, [setName]);\n  const toggleSlider = () => {\n    setIsSliderOpen(!isSliderOpen);\n  };\n  const sessionSelection = sessionName => {\n    setSelectedSessionName(sessionName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Sessions, {\n        toggleSlider: toggleSlider,\n        name: name,\n        sessionSelection: sessionSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isSliderOpen && /*#__PURE__*/_jsxDEV(Slider, {\n      closeSlider: toggleSlider,\n      selectedSessionName: selectedSessionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Appointment, \"a+5BbcmhIvPaQX5ZUZlZLctH17k=\");\n_c = Appointment;\nexport default Appointment;\nvar _c;\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Sessions","Slider","axios","AppointmentContext","jsxDEV","_jsxDEV","Appointment","_s","isSliderOpen","setIsSliderOpen","name","setName","selectedSessionName","setSelectedSessionName","last_session","setLast_session","fetchSessions","response","get","withCredentials","data","toggleSlider","sessionSelection","sessionName","children","fileName","_jsxFileName","lineNumber","columnNumber","closeSlider","_c","$RefreshReg$"],"sources":["C:/Users/mahes/OneDrive/Desktop/Mahesh Pathak/Practice-Folder/Acc/acc/src/componets/Appointment/Appointment.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport Sessions from './Sessions';\r\nimport Slider from '../Slider';\r\nimport axios from 'axios';\r\nimport { AppointmentContext } from './Context/AppointmentContext';\r\n\r\nfunction Appointment() {\r\n  const [isSliderOpen, setIsSliderOpen] = useState(false);\r\n\r\n  // Consume state values from context\r\n  const {\r\n    name, setName,\r\n    selectedSessionName, setSelectedSessionName,\r\n    last_session, setLast_session\r\n  } = useContext(AppointmentContext);\r\n\r\n  // Fetch session data on component mount\r\n  useEffect(() => {\r\n    const fetchSessions = async () => {\r\n      const response = await axios.get('http://localhost:8000/api/appointment/getClassSessions', { withCredentials: true });\r\n      setName(response.data);\r\n    };\r\n    fetchSessions();\r\n  }, [setName]);\r\n\r\n  const toggleSlider = () => {\r\n    setIsSliderOpen(!isSliderOpen);\r\n  };\r\n\r\n  const sessionSelection = (sessionName) => {\r\n    setSelectedSessionName(sessionName);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Sessions toggleSlider={toggleSlider} name={name} sessionSelection={sessionSelection} />\r\n      </div>\r\n\r\n      {isSliderOpen && (\r\n        <Slider closeSlider={toggleSlider} selectedSessionName={selectedSessionName} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Appointment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAM;IACJW,IAAI;IAAEC,OAAO;IACbC,mBAAmB;IAAEC,sBAAsB;IAC3CC,YAAY;IAAEC;EAChB,CAAC,GAAGlB,UAAU,CAACM,kBAAkB,CAAC;;EAElC;EACAL,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,wDAAwD,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;MACrHR,OAAO,CAACM,QAAQ,CAACG,IAAI,CAAC;IACxB,CAAC;IACDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzBZ,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMc,gBAAgB,GAAIC,WAAW,IAAK;IACxCV,sBAAsB,CAACU,WAAW,CAAC;EACrC,CAAC;EAED,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,eACEnB,OAAA,CAACL,QAAQ;QAACqB,YAAY,EAAEA,YAAa;QAACX,IAAI,EAAEA,IAAK;QAACY,gBAAgB,EAAEA;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,EAELpB,YAAY,iBACXH,OAAA,CAACJ,MAAM;MAAC4B,WAAW,EAAER,YAAa;MAACT,mBAAmB,EAAEA;IAAoB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC/E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CAtCQD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}