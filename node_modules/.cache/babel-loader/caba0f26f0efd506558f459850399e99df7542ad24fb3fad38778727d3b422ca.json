{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahes\\\\OneDrive\\\\Desktop\\\\Mahesh Pathak\\\\Practice-Folder\\\\Acc\\\\acc\\\\src\\\\componets\\\\Appointment\\\\Appointment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Sessions from './Sessions';\nimport Slider from '../Slider';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Appointment() {\n  _s();\n  var _sessionDetails$entri;\n  const [isSliderOpen, setIsSliderOpen] = useState(false);\n  const [name, setName] = useState([]);\n  const [selectedSessionName, setSelectedSessionName] = useState(null);\n  const [sessionDetails, setSessionDetails] = useState('');\n  const [task, setTask] = useState([{}]);\n  useEffect(() => {\n    const fetchSessions = async () => {\n      const response = await axios.get('http://localhost:8000/api/appointment/getClassSessions', {\n        withCredentials: true\n      });\n      setName(response.data);\n    };\n    fetchSessions();\n  }, []);\n  const toggleSlider = () => {\n    setIsSliderOpen(!isSliderOpen);\n  };\n  const sessionSelection = sessionName => {\n    setSelectedSessionName(sessionName);\n  };\n  const sessionDetail = sessionName => {\n    setSessionDetails(sessionName);\n  };\n\n  // Update task whenever sessionDetails changes and has entries\n  useEffect(() => {\n    if (sessionDetails !== null && sessionDetails !== void 0 && sessionDetails.entries && sessionDetails.entries.length > 0) {\n      const lastEntry = sessionDetails.entries[sessionDetails.entries.length - 1];\n      setTask([{\n        score: lastEntry.score,\n        last_session: lastEntry.last_session,\n        type: lastEntry.type,\n        feedback: lastEntry.feedback\n      }]);\n      console.log(\"Updated task:\", task);\n    }\n  }, [sessionDetails]); // Dependency array includes sessionDetails\n\n  let lastSessionDate = '';\n  if ((sessionDetails === null || sessionDetails === void 0 ? void 0 : (_sessionDetails$entri = sessionDetails.entries) === null || _sessionDetails$entri === void 0 ? void 0 : _sessionDetails$entri.length) > 0) {\n    lastSessionDate = sessionDetails.entries[sessionDetails.entries.length - 1].last_session;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [lastSessionDate && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: lastSessionDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Sessions, {\n        toggleSlider: toggleSlider,\n        name: name,\n        sessionSelection: sessionSelection,\n        sessionDetail: sessionDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), isSliderOpen && /*#__PURE__*/_jsxDEV(Slider, {\n      closeSlider: toggleSlider,\n      selectedSessionName: selectedSessionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Appointment, \"Xst70hLN31ek1embaC/t95vKI50=\");\n_c = Appointment;\nexport default Appointment;\nvar _c;\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"names":["React","useEffect","useState","Sessions","Slider","axios","jsxDEV","_jsxDEV","Appointment","_s","_sessionDetails$entri","isSliderOpen","setIsSliderOpen","name","setName","selectedSessionName","setSelectedSessionName","sessionDetails","setSessionDetails","task","setTask","fetchSessions","response","get","withCredentials","data","toggleSlider","sessionSelection","sessionName","sessionDetail","entries","length","lastEntry","score","last_session","type","feedback","console","log","lastSessionDate","children","fileName","_jsxFileName","lineNumber","columnNumber","closeSlider","_c","$RefreshReg$"],"sources":["C:/Users/mahes/OneDrive/Desktop/Mahesh Pathak/Practice-Folder/Acc/acc/src/componets/Appointment/Appointment.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Sessions from './Sessions';\r\nimport Slider from '../Slider';\r\nimport axios from 'axios';\r\n\r\nfunction Appointment() {\r\n  const [isSliderOpen, setIsSliderOpen] = useState(false);\r\n  const [name, setName] = useState([]);\r\n  const [selectedSessionName, setSelectedSessionName] = useState(null);\r\n  const [sessionDetails, setSessionDetails] = useState('');\r\n  const [task, setTask] = useState([{}]);\r\n\r\n  useEffect(() => {\r\n    const fetchSessions = async () => {\r\n      const response = await axios.get('http://localhost:8000/api/appointment/getClassSessions', { withCredentials: true });\r\n      setName(response.data);\r\n    };\r\n    fetchSessions();\r\n  }, []);\r\n\r\n  const toggleSlider = () => {\r\n    setIsSliderOpen(!isSliderOpen);\r\n  };\r\n\r\n  const sessionSelection = (sessionName) => {\r\n    setSelectedSessionName(sessionName);\r\n  };\r\n\r\n  const sessionDetail = (sessionName) => {\r\n    setSessionDetails(sessionName);\r\n  };\r\n\r\n  // Update task whenever sessionDetails changes and has entries\r\n  useEffect(() => {\r\n    if (sessionDetails?.entries && sessionDetails.entries.length > 0) {\r\n      const lastEntry = sessionDetails.entries[sessionDetails.entries.length - 1];\r\n      setTask([\r\n        {\r\n          score: lastEntry.score,\r\n          last_session: lastEntry.last_session,\r\n          type: lastEntry.type,\r\n          feedback: lastEntry.feedback\r\n        }\r\n      ]);\r\n      console.log(\"Updated task:\", task);\r\n    }\r\n  }, [sessionDetails]); // Dependency array includes sessionDetails\r\n\r\n  let lastSessionDate = '';\r\n  if (sessionDetails?.entries?.length > 0) {\r\n    lastSessionDate = sessionDetails.entries[sessionDetails.entries.length - 1].last_session;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {/* Display last session date if available */}\r\n        {lastSessionDate && <span>{lastSessionDate}</span>}\r\n        <Sessions toggleSlider={toggleSlider} name={name} sessionSelection={sessionSelection} sessionDetail={sessionDetail} />\r\n      </div>\r\n\r\n      {isSliderOpen && (\r\n        <Slider closeSlider={toggleSlider} selectedSessionName={selectedSessionName} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Appointment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMoB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,wDAAwD,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;MACrHV,OAAO,CAACQ,QAAQ,CAACG,IAAI,CAAC;IACxB,CAAC;IACDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzBd,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMgB,gBAAgB,GAAIC,WAAW,IAAK;IACxCZ,sBAAsB,CAACY,WAAW,CAAC;EACrC,CAAC;EAED,MAAMC,aAAa,GAAID,WAAW,IAAK;IACrCV,iBAAiB,CAACU,WAAW,CAAC;EAChC,CAAC;;EAED;EACA3B,SAAS,CAAC,MAAM;IACd,IAAIgB,cAAc,aAAdA,cAAc,eAAdA,cAAc,CAAEa,OAAO,IAAIb,cAAc,CAACa,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MAChE,MAAMC,SAAS,GAAGf,cAAc,CAACa,OAAO,CAACb,cAAc,CAACa,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;MAC3EX,OAAO,CAAC,CACN;QACEa,KAAK,EAAED,SAAS,CAACC,KAAK;QACtBC,YAAY,EAAEF,SAAS,CAACE,YAAY;QACpCC,IAAI,EAAEH,SAAS,CAACG,IAAI;QACpBC,QAAQ,EAAEJ,SAAS,CAACI;MACtB,CAAC,CACF,CAAC;MACFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEnB,IAAI,CAAC;IACpC;EACF,CAAC,EAAE,CAACF,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB,IAAIsB,eAAe,GAAG,EAAE;EACxB,IAAI,CAAAtB,cAAc,aAAdA,cAAc,wBAAAP,qBAAA,GAAdO,cAAc,CAAEa,OAAO,cAAApB,qBAAA,uBAAvBA,qBAAA,CAAyBqB,MAAM,IAAG,CAAC,EAAE;IACvCQ,eAAe,GAAGtB,cAAc,CAACa,OAAO,CAACb,cAAc,CAACa,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC,CAACG,YAAY;EAC1F;EAEA,oBACE3B,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,GAEGD,eAAe,iBAAIhC,OAAA;QAAAiC,QAAA,EAAOD;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClDrC,OAAA,CAACJ,QAAQ;QAACuB,YAAY,EAAEA,YAAa;QAACb,IAAI,EAAEA,IAAK;QAACc,gBAAgB,EAAEA,gBAAiB;QAACE,aAAa,EAAEA;MAAc;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnH,CAAC,EAELjC,YAAY,iBACXJ,OAAA,CAACH,MAAM;MAACyC,WAAW,EAAEnB,YAAa;MAACX,mBAAmB,EAAEA;IAAoB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC/E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnC,EAAA,CA7DQD,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AA+DpB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}