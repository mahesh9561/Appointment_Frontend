{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahes\\\\OneDrive\\\\Desktop\\\\Mahesh Pathak\\\\Practice-Folder\\\\Acc\\\\acc\\\\src\\\\componets\\\\Appointment\\\\AppointmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { AppointmentContext } from './Context/AppointmentContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppointmentForm() {\n  _s();\n  const {\n    selectedSessionName,\n    date,\n    score,\n    time,\n    type,\n    feedback,\n    setFeedback,\n    setScore,\n    id,\n    last_session\n  } = useContext(AppointmentContext);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const storedFeedback = localStorage.getItem('feedback');\n    const storedScore = localStorage.getItem('score');\n    if (storedFeedback) setFeedback(storedFeedback);\n    if (storedScore) setScore(storedScore);\n  }, [setFeedback, setScore]);\n\n  // Save data to localStorage on change\n  useEffect(() => {\n    localStorage.setItem('feedback', feedback);\n    localStorage.setItem('score', score);\n  }, [feedback, score]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put('http://localhost:8000/api/appointment/updateSession', {\n        session_name: selectedSessionName,\n        type: \"FND\",\n        entries: [{\n          _id: id,\n          score: score,\n          last_session: last_session,\n          feedback: feedback,\n          type: type,\n          date: date,\n          time: time\n        }]\n      }, {\n        withCredentials: true\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center bg-white text-slate-700 mb-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5 border w-1/2 items-center shadow-md rounded-lg -mt-10 bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-2xl font-semibold uppercase py-3\",\n          children: \"Register Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"font-semibold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(AppointmentForm, \"NZm3cDkGTS4T3t+lldZmDc0hE1Y=\");\n_c = AppointmentForm;\nexport default AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","useContext","useEffect","AppointmentContext","axios","jsxDEV","_jsxDEV","AppointmentForm","_s","selectedSessionName","date","score","time","type","feedback","setFeedback","setScore","id","last_session","storedFeedback","localStorage","getItem","storedScore","setItem","handleSubmit","e","preventDefault","response","put","session_name","entries","_id","withCredentials","console","log","data","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/mahes/OneDrive/Desktop/Mahesh Pathak/Practice-Folder/Acc/acc/src/componets/Appointment/AppointmentForm.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { AppointmentContext } from './Context/AppointmentContext';\r\nimport axios from 'axios';\r\n\r\nfunction AppointmentForm() {\r\n  const {\r\n    selectedSessionName,\r\n    date,\r\n    score,\r\n    time,\r\n    type,\r\n    feedback,\r\n    setFeedback,\r\n    setScore,\r\n    id,\r\n    last_session\r\n  } = useContext(AppointmentContext);\r\n\r\n  // Load data from localStorage on mount\r\n  useEffect(() => {\r\n    const storedFeedback = localStorage.getItem('feedback');\r\n    const storedScore = localStorage.getItem('score');\r\n    if (storedFeedback) setFeedback(storedFeedback);\r\n    if (storedScore) setScore(storedScore);\r\n  }, [setFeedback, setScore]);\r\n\r\n  // Save data to localStorage on change\r\n  useEffect(() => {\r\n    localStorage.setItem('feedback', feedback);\r\n    localStorage.setItem('score', score);\r\n  }, [feedback, score]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.put('http://localhost:8000/api/appointment/updateSession', {\r\n        session_name: selectedSessionName,\r\n        type: \"FND\",\r\n        entries: [\r\n          {\r\n            _id: id,\r\n            score: score,\r\n            last_session: last_session,\r\n            feedback: feedback,\r\n            type: type,\r\n            date: date,\r\n            time: time\r\n          }\r\n        ]\r\n      },\r\n        { withCredentials: true }\r\n      );\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='flex justify-center bg-white text-slate-700 mb-10'>\r\n        <div className='p-5 border w-1/2 items-center shadow-md rounded-lg -mt-10 bg-white'>\r\n          <div className='text-center text-2xl font-semibold uppercase py-3'>Register Form</div>\r\n          <form onSubmit={handleSubmit} className='font-semibold'>\r\n            {/* Rest of the form fields */}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppointmentForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IACJC,mBAAmB;IACnBC,IAAI;IACJC,KAAK;IACLC,IAAI;IACJC,IAAI;IACJC,QAAQ;IACRC,WAAW;IACXC,QAAQ;IACRC,EAAE;IACFC;EACF,CAAC,GAAGjB,UAAU,CAACE,kBAAkB,CAAC;;EAElC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,MAAMC,WAAW,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,cAAc,EAAEJ,WAAW,CAACI,cAAc,CAAC;IAC/C,IAAIG,WAAW,EAAEN,QAAQ,CAACM,WAAW,CAAC;EACxC,CAAC,EAAE,CAACP,WAAW,EAAEC,QAAQ,CAAC,CAAC;;EAE3B;EACAd,SAAS,CAAC,MAAM;IACdkB,YAAY,CAACG,OAAO,CAAC,UAAU,EAAET,QAAQ,CAAC;IAC1CM,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;EACtC,CAAC,EAAE,CAACG,QAAQ,EAAEH,KAAK,CAAC,CAAC;EAErB,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,qDAAqD,EAAE;QACtFC,YAAY,EAAEpB,mBAAmB;QACjCI,IAAI,EAAE,KAAK;QACXiB,OAAO,EAAE,CACP;UACEC,GAAG,EAAEd,EAAE;UACPN,KAAK,EAAEA,KAAK;UACZO,YAAY,EAAEA,YAAY;UAC1BJ,QAAQ,EAAEA,QAAQ;UAClBD,IAAI,EAAEA,IAAI;UACVH,IAAI,EAAEA,IAAI;UACVE,IAAI,EAAEA;QACR,CAAC;MAEL,CAAC,EACC;QAAEoB,eAAe,EAAE;MAAK,CAC1B,CAAC;MACDC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACE9B,OAAA;IAAA+B,QAAA,eACE/B,OAAA;MAAKgC,SAAS,EAAC,mDAAmD;MAAAD,QAAA,eAChE/B,OAAA;QAAKgC,SAAS,EAAC,oEAAoE;QAAAD,QAAA,gBACjF/B,OAAA;UAAKgC,SAAS,EAAC,mDAAmD;UAAAD,QAAA,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtFpC,OAAA;UAAMqC,QAAQ,EAAEnB,YAAa;UAACc,SAAS,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClC,EAAA,CAlEQD,eAAe;AAAAqC,EAAA,GAAfrC,eAAe;AAoExB,eAAeA,eAAe;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}